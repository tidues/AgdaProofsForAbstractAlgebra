module is-algebra {ℓ}{A : Set ℓ} where

open import Agda.Primitive
open import eq
open import relation {ℓ}{A}

record IsSemigroup (_·_ : Op₂ A) : Set ℓ where
  field
    asso : Associative _·_

record IsMonoid (e : A) (_·_ : Op₂ A) : Set ℓ where
  field
    isSemigroup : IsSemigroup _·_
    identity : Identity {_·_} e

record IsGroup (e : A)(_⁻¹ : Op₁ A)(_·_ : Op₂ A) : Set ℓ where
  field
    isMonoid : IsMonoid e _·_
    inv : Inverse {e} {_·_} _⁻¹

{-
record Group {ℓ} : Set (lsuc ℓ) where
  field
    carrier : Set ℓ
    e : carrier
    _⁻¹ : Op₁ carrier
    _·_ : Op₂ carrier
    isGroup : IsGroup e _⁻¹ _·_

  open IsGroup isGroup public
-}
